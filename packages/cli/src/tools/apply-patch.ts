import { applyPatch } from 'diff';
import { writeFile, readFile } from 'fs-extra';
import { RunnableToolFunction } from 'openai/lib/RunnableFunction';
import { z } from 'zod';
import { zodToJsonSchema } from 'zod-to-json-schema';
import { confirmWorkingDirectory } from '../lib/current-working-directory';
import { toolLogger } from '../lib/loggers';
import wrap from '../lib/wrap-tool-function';
import { zodParseJSON } from '../lib/zod';

export const params = z.object({
  filePath: z.string().describe('The relative or absolute file path'),
  patch: z.string().describe('A unified diff patch')
});

export async function func({ filePath, patch }: z.infer<typeof params>) {
  await confirmWorkingDirectory(filePath);
  toolLogger(patch);
  const oldContent = await readFile(filePath, 'utf-8');
  const newContent = applyPatch(oldContent, patch);
  if (newContent === false) {
    throw new Error(`Unable to patch ${filePath}`);
  }
  await writeFile(filePath, newContent, 'utf-8');
  toolLogger(`Patched ${filePath}: \n${patch}`);
}

export default {
  type: 'function',
  function: {
    name: 'applyPatch',
    description: `Applies a unified diff (unidiff) format patch to a file.
    
   The Unified Diff format, typically generated by the diff command, compares and displays file differences. It starts with a header indicating the original (from-file) and modified (to-file) files, including modification times. The format then presents 'hunks', sections showing differences. Each hunk begins with "@@" followed by line numbers from both files. Lines common to both files are prefixed with a space. Lines unique to the original file are prefixed with '-', denoting deletion, and lines unique to the modified file are prefixed with '+', indicating addition. This format is concise, allowing for easy identification of changes between two files.
    `,
    parameters: zodToJsonSchema(params),
    parse: zodParseJSON(params),
    function: wrap(func)
  }
} as RunnableToolFunction<z.infer<typeof params>>;
